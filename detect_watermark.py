from transformers import GPT2Tokenizer
import numpy as np
import random
import scipy.stats as st

def primitive_detect_watermark(input_str, prompt_len, seed, gamma):
    # works reliably with hard watermark. With soft watermark, probably produces lots of false positives
    tokenizer = GPT2Tokenizer.from_pretrained("gpt2")
    inputs = tokenizer(input_str, return_tensors="pt")
    tokens = inputs['input_ids'][0]

    for i in range(prompt_len - 1, len(tokens)):
        random.seed(seed + tokens[i].item())
    
        for i in range(tokens[i + 1] + 1):
            is_red = random.random() > gamma
        if is_red:
            print("not watermarked text")
            return False # determined not to be watermarked

    prob = (1/2) ** (len(tokens) - prompt_len)
    print(f"probability {prob} that this text is watermarked")
    return True # it's watermarked

def fancy_detect_watermark(input_str, prompt_len, seed, gamma):
    tokenizer = GPT2Tokenizer.from_pretrained("gpt2")
    inputs = tokenizer(input_str, return_tensors="pt")
    tokens = inputs['input_ids'][0]

    green_count = 0
    total_count = len(tokens) - prompt_len

    for i in range(prompt_len - 1, len(tokens) - 1):
        random.seed(seed + tokens[i].item())
    
        for i in range(tokens[i + 1] + 1):
            is_red = random.random() > gamma
        if not is_red:
            green_count += 1

    z = (green_count - gamma*total_count)/np.sqrt(total_count * gamma * (1-gamma))
    prob = st.norm.cdf(z)
    print(f"probability that text is generated by watermarked model: {prob}")
    return prob


def main():
    hard = "Recently, scientists have discovered that obesity by itself may not be a contributing cause of heart problem. Infants' obesity generating lip"
    soft = "Recently, scientists have discovered that smoking in childhood doesn't plummet after birth by any means, but it has a profound impact on"
    none = "Recently, scientists have discovered that the brain's ability to process information is impaired when it is exposed to a high-energy source"
    prompt_len = 6
    primitive_detect_watermark(hard, prompt_len, seed = 1729, gamma = 0.5)
    primitive_detect_watermark(soft, prompt_len, seed = 1729, gamma = 0.5) # might say it's not watermarked -- that's expected behavior
    primitive_detect_watermark(none, prompt_len, seed = 1729, gamma = 0.5)

    fancy_detect_watermark(hard, prompt_len, seed = 1729, gamma = 0.5)
    fancy_detect_watermark(soft, prompt_len, seed = 1729, gamma = 0.5)
    fancy_detect_watermark(none, prompt_len, seed = 1729, gamma = 0.5)
    
    

if __name__ == "__main__":
    main()
